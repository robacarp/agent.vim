*claude-in-vim.txt*  A Vim plugin for interacting with Claude AI

==============================================================================
CONTENTS                                              *claude-in-vim-contents*

    1. Introduction ........................... |claude-in-vim-introduction|
    2. Installation ........................... |claude-in-vim-installation|
    3. Configuration .......................... |claude-in-vim-configuration|
    4. Usage .................................. |claude-in-vim-usage|
    5. Commands ............................... |claude-in-vim-commands|
    6. Mappings ............................... |claude-in-vim-mappings|
    7. License ................................ |claude-in-vim-license|

==============================================================================
1. INTRODUCTION                                   *claude-in-vim-introduction*

claude-in-vim is a Vim plugin that allows you to interact with Claude AI
directly from your Vim editor. You can send text selections to Claude and
get responses in a new buffer.

==============================================================================
2. INSTALLATION                                   *claude-in-vim-installation*

Using vim-plug:
>
    Plug 'yourusername/claude-in-vim'
<

After installation, you'll need to set your Claude API key:
>
    :ClaudeSetApiKey your_api_key_here
<

==============================================================================
3. CONFIGURATION                                 *claude-in-vim-configuration*

The following variables can be set in your vimrc to configure the plugin:

*g:claude_api_key*
    Your Claude API key. Can also be set with the |:ClaudeSetApiKey| command.
    Default: '' (empty string)

*g:claude_model*
    The Claude model to use for requests.
    Default: 'claude-3-7-sonnet-20250219'

*g:claude_max_tokens*
    Maximum number of tokens in the response.
    Default: 1000

*g:claude_temperature*
    Temperature setting for response generation.
    Default: 0.7

*g:claude_no_mappings*
    If set to 1, disables default key mappings.
    Default: not set

==============================================================================
4. USAGE                                               *claude-in-vim-usage*

To use claude-in-vim:

1. Select text in visual mode or place cursor on a line in normal mode
2. Use the appropriate command or mapping to send the text to Claude
3. A new buffer will open with Claude's response

==============================================================================
5. COMMANDS                                         *claude-in-vim-commands*

*:ClaudeAsk*
    Send selected text (or current line in normal mode) to Claude.

*:ClaudeSetModel* {model}
    Set the Claude model to use.

*:ClaudeSetApiKey* {key}
    Set your Claude API key.

*:ClaudeAskQuestion*
    Send selected text (or current line in normal mode) to Claude along with a
    specific question you'll be prompted to enter.

==============================================================================
6. MAPPINGS                                         *claude-in-vim-mappings*

Default mappings (unless g:claude_no_mappings is set):

*<Leader>ca*
    Send selected text (or current line in normal mode) to Claude.

You can create custom mappings using <Plug> mappings:
>
    nmap <Leader>c <Plug>(claude-ask)
    vmap <Leader>c <Plug>(claude-ask)
<

*<Leader>cq*
    Send selected text (or current line in normal mode) to Claude with a specific
    question. You'll be prompted to enter your question.

==============================================================================
7. LICENSE                                           *claude-in-vim-license*

MIT License

 vim:tw=78:ts=8:ft=help:norl:
